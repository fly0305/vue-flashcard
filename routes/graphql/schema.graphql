#import users.graphql
#import decks.graphql
#import cards.graphql
#import apis.graphql
#import languages.graphql

"Can be used as an argument to upload files"
scalar Upload @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Upload")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-01-01 13:00:00`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")


type Query {
    user: User @middleware(checks: ["auth:sanctum"]) @auth
}

type Mutation {
    login(data: LoginInput @spread): User!
    @field(resolver: "App\\GraphQL\\Mutations\\Auth\\LoginMutator")

    register(data: RegisterInput @spread): User!
    @field(resolver: "App\\GraphQL\\Mutations\\Auth\\RegisterMutator")
}

extend type Mutation @middleware(checks: ["auth:sanctum"]) {
    logout: LogoutResponse! @field(resolver: "App\\GraphQL\\Mutations\\Auth\\LogoutMutator")
}

input LoginInput {
    login: String
    password: String
}

input RegisterInput {
    email: String
    password: String
    password_confirmation: String
}

type LogoutResponse {
    status: String!
    message: String
}
